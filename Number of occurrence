class Solution {
    int count(int[] arr, int n, int x) {
        int low = 0;
        int high = n - 1;
        int first =0;
        int last =0;
        
        while(low <= high) {
            int mid = (low + high) /2;
            if (arr[mid] == x) {
                if(mid - 1 >= 0 && arr[mid - 1] == x) {
                    high = mid - 1;
                }
                else {
                    first = mid -1;
                    low = mid + 1;
                    // break;
                }
            }
            else if(arr[mid] < x) {
                low = mid + 1;
            }
            else {
                high = mid - 1;
            }
        }
        //System.out.println(first);
        
        low = 0;
        high = n-1;
        while(low <= high) {
            int mid = (low + high) /2;
            if(arr[mid] == x) {
                if(mid + 1 < n && arr[mid + 1] == x) {
                    low = mid + 1;
                }
                else {
                    last = mid;
                    high = mid - 1;
                   
                }
            }
            else if(arr[mid] < x) {
                low = mid + 1;
            }
            else {
                high = mid - 1;
            }
        }
        //System.out.println(last);
        return last - first;
        
    }
}
