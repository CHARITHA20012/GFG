class Solution{
	public:
	int NthRoot(int n, int m)
	{
	    int ans = -1;
	    int low = 1;
	    int high = m;
	    while(low <= high) {//1 <= 9 1<= 4 2<=4
	        int mid = (low + high) /2;//5 2 3
	        long root = 1;
	        for(int i=1;i<= n; i++) {//1 2
	            root = root * mid;//1*5 5*5=25 1*2 2*2=4 1*3 3*3=9
	            if(root > m) {//to prevent overflow
	                high = mid -1;
	                break;
	            }
	        }
	        if(root == m) {//25 == 9 4==9 9==9
	            return mid;
	        }
	        
	       // else if(root > m) {//25>9 4>9 
	       //     high = mid - 1;//4
	       // }
	        else if(root < m) {//4 < 9
	            low = mid + 1;//2
	        }
	    }
	    return ans;
